generator client {
  provider = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["wedding"]
}

model Booking {
  @@schema("wedding")
  id              String   @id @default(cuid())
  name            String
  email           String
  phone           String
  guestCount      Int
  eventType       String
  specialRequests String?  @db.Text
  date            DateTime @db.Timestamptz(6)
  price           Float
  status          String   @default("pending")
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @updatedAt @db.Timestamptz(6)
  
  payment         Payment?
  
  @@index([date])
  @@index([status])
  @@index([email])
}

model Payment {
  @@schema("wedding")
  id              String   @id @default(cuid())
  bookingId       String   @unique
  amount          Float
  stripePaymentId String?
  status          String   @default("pending")
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  
  booking         Booking  @relation(fields: [bookingId], references: [id], onDelete: Cascade)
  
  @@index([status])
  @@index([stripePaymentId])
}

model DatePrice {
  @@schema("wedding")
  id              String   @id @default(cuid())
  date            DateTime @unique @db.Timestamptz(6)
  price           Float
  isAvailable     Boolean  @default(true)
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @updatedAt @db.Timestamptz(6)
  
  @@index([date])
}

model PricingRule {
  @@schema("wedding")
  id              String   @id @default(cuid())
  name            String
  type            String   // 'weekend', 'weekday', 'season', 'holiday'
  price           Float
  startDate       DateTime? @db.Timestamptz(6)
  endDate         DateTime? @db.Timestamptz(6)
  daysOfWeek      Int[]    // 0-6 (Sunday-Saturday)
  priority        Int      @default(0)
  isActive        Boolean  @default(true)
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @updatedAt @db.Timestamptz(6)
}

model Admin {
  @@schema("wedding")
  id              String   @id @default(cuid())
  username        String   @unique
  passwordHash    String
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @updatedAt @db.Timestamptz(6)
}

model VenueSettings {
  @@schema("wedding")
  id              String   @id @default(cuid())
  videoUrl        String   @db.Text
  createdAt       DateTime @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime @updatedAt @db.Timestamptz(6)
}